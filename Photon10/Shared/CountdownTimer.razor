<p>
<H1><FONT COLOR="#66FF00">
<div style="border-radius: 10px; 
			background: black; 
			padding: 10px; 
			border: 10px solid lightgray;
			font-family: Stencil;">
  TIME REMAINING: @minutes : @seconds
</div>
</FONT></H1>
</p>

@code {
    private int time = 0;
    private DateTime start;
    public bool timerEnd = false;
    private int minutes;
    private int seconds;
    private int timerLen = 360;
    [Parameter]
    public EventCallback TimerFinished { get; set; }
    [Parameter]
    public bool TimerRun { get; set; } = false;
    private bool runTimer;
    private void warning()
    {
        time = (int)(timerLen - (DateTime.Now - start).TotalSeconds);
        if (time >= 0 && TimerRun) {
            minutes = (time - (time % 60)) / 60;
            seconds = time % 60;
            StateHasChanged();
        } else
        {
            timerEnd = true;
            TimerRun = false;
            TimerFinished.InvokeAsync();
        }
    }
    protected override void OnInitialized()
    {
        time = timerLen;
        runTimer = TimerRun;
        minutes = (time - (time % 60)) / 60;
        seconds = time % 60;
        base.OnInitialized();
    }
    protected override void OnParametersSet()
    {
        if(runTimer != TimerRun)
        {
            start = DateTime.Now;
        }
        runTimer = TimerRun;
        
        base.OnParametersSet();
    }
    protected override void OnAfterRender(bool firstRender)
    {
        if(runTimer)
        {
            warning();
        }
    }
}
