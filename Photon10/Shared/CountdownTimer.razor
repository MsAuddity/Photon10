<p>@minutes minutes and @seconds seconds left in the game.</p>

@code {
    private int time = 0;
    private DateTime start = DateTime.Now;
    public bool timerEnd = false;
    private int minutes;
    private int seconds;
    private int timerLen = 360;
    private DateTime timestop;
    public bool enabled = false;
    public bool first = true;

    private void warning()
    {
        if(enabled)
        {
            time = (int)(timerLen - (DateTime.Now - start).TotalSeconds);
            if (time >= 0)
            {
                minutes = (time - (time % 60)) / 60;
                seconds = time % 60;
                StateHasChanged();
            }
            else
            {
                timerEnd = true;
            }
        }
    }

    public void timeStart()
    {
        if (first)
        {
            start = DateTime.Now;
            time = (int)(timerLen - (DateTime.Now - start).TotalSeconds);
            timestop = DateTime.Now;    
        }
        start += (DateTime.Now - timestop);
        enabled = true;
        first = false;
    }

    public void timeStop()
    {
        time = (int)(timerLen - (DateTime.Now - start).TotalSeconds);
        timestop = DateTime.Now;
        enabled = false;
    }

    protected override void OnAfterRender(bool firstRender)
    {
            warning();
    }
}
