
<u1>
    @if (false)
    {
        @foreach (Models.Player player in Players)
        {
            <p>@player.Codename</p>
        }
    }
    else
    {
        <li>No players yet!</li>
    }

    <li>
        <PlayerEntry/>
    </li>
</u1>


@inject IDbContextFactory<PlayerDbContext> DbFactory
@code
{
    //following code is how to do ops against the database. var context is used each time. line below is query to get back a list.
    //  var context = DbFactory.CreateDbContext();
    //  Penalties = context.Penalties.Where<Penalty>(x => x.UserId == User.Id).ToList<Penalty>();

    private List<Models.Player> Players { get; set; }

    protected override Task OnInitializedAsync()
    {
        var context = DbFactory.CreateDbContext();
        Players = context.Players.Where(x => x.Id >= 0).ToList<Models.Player>();
        return base.OnInitializedAsync();
    }
 }